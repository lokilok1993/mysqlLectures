/*************************************************************************************************************************************************************************************/

  /*
  * Служебные операторы
  *
  * CREATE TABLE [table] (row type,)  - Создание таблицы
  * DESCRIBE (DESC) [table]           - Описание таблицы
  * CONSTRAINT                        - Ограничение
  * REFERENCES                        - Ссылается
  */

  /*
  *	Типы данных
  *
  *	CHAR(length)		                    -	Строки константной длинны	( макс 255 символов )
  *	VARCHAR(length)	                    -	Строки переменной длинны	( макс 255 символов )
  *	TINYTEXT			                      -	Маленький текст				    ( макс 255 символов )
  *	TEXT				                        -	Текст						          ( макс 65 535 символов )
  *	MEDIUMTEXT			                    -	Средний текст				      ( макс 16 777 215 символов )
  *	LONGTEXT			                      -	Длинный текст				      ( макс 4 294 967 295 символов )
  * ENUM(A, B)                          - Перечисление и проверочное ограничение в описание типа
  *
  *	TINYINT                             - Мелкое число              ( от -128 до 127 )
  *	SMALLINT                            - Маленькое число           ( от -32 768 до 32 768 )
  *	MEDIUMINT                           - Среднее число             ( от -8 388 608 до 8 388 608 )
  *	INT                                 - Число                     ( от -2 147 483 648 до 2 147 483 648 )
  *	BIGINT                              - Большое число             ( от -9 223 372 036 854 775 808 до 9 223 372 036 854 775 808 )
  *
  * FLOAT(точность масштаб)             - Число с плавающей точкой  ( от -3,402823466E+38 до -1,175494351E-38 и от 1,175494351E-38 до 3,402823466E+38 )
  * DOUBLE(точность масштаб)            - Дробное (более точное)    ( от 1,7976931348623157E+308 до -2,2250738585072014E-308 и от 2,2250738585072014E-308 до 1,7976931348623157E+308 )
  *
  * DATE                                - Дата                      ( Date YYYY-MM-DD )
  * DATETIME                            - Дата и время              ( от 1000-01-01 до 9999-12-31 )
  * TIMESTAMP                           - Временной отпечаток       ( Datetime YYYY-MM-DD HH:MI:SS от 1000-01-01 00:00:00 до 9999-12-31 23:59:59 )
  * YEAR                                - Год                       ( Timestamp YYYY-MM-DD HH:MI:SS от 1970-01-01 00:00:00 до 2037-12-31 23:59:59 )
  * TIME                                - Время                     ( Year YYYY от 1901 до 2155 )
  *
  *
  * NOT NULL                            - не может быть без значения
  */

  /*
  * Ограничения
  *
  * CONSTRAINT pk_person PRIMARY KEY (person_id)      - Ограничение первичного ключа ( primary key constraint )
  * CONSTRAINT fk_person_id FOREIGN KEY  (person_id)  - Ограничения внешнего ключа ( foreign key constraint )
  */

/*************************************************************************************************************************************************************************************/


/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************                                                     *******************/
/*********************                                                     *******************/
/*********************        Создание и заполнение базы данных            *******************/
/*********************                                                     *******************/
/*********************                                                     *******************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/



/* Создание нового пользователя */

  grant all privileges on *.* to 'username'@'localhost' identified by 'password';


/* Выбро текущего времени */

  SELECT now();



/* Создание таблицы person (человек) */

  CREATE TABLE person
    (
      person_id    SMALLINT UNSIGNED,
      fname        VARCHAR(20),
      lname        VARCHAR(20),
      gender       ENUM('M', 'F'),
      birdh_date   DATE,
      address      VARCHAR(30),
      city         VARCHAR(20),
      state        VARCHAR(20),
      country      VARCHAR(20),
      postal_code  VARCHAR(20),
      CONSTRAINT pk_person PRIMARY KEY (person_id)
    );



/* Создание таблицы favorite_food (любимое блюдо) */

  CREATE TABLE favorite_food
    (
      person_id SMALLINT UNSIGNED,
      food VARCHAR(20),
      CONSTRAINT pk_favorite_food PRIMARY KEY (person_id, food),
      CONSTRAINT fk_person_id FOREIGN KEY  (person_id)
      REFERENCES person (person_id)
    );



/* Добовление автоинкремента полю person_id */

  ALTER TABLE person MODIFY person_id SMALLINT UNSIGNED AUTO_INCREMENT;



/* Для изменения поля, которое является внешним ключём для другой таблицы нужно выключить проврку внешних ключей */

  SET FOREIGN_KEY_CHECKS = 0;
  /* DO WHAT YOU NEED HERE */
  SET FOREIGN_KEY_CHECKS = 1;



/* Добавление строки для Вильяма Тёрнера */

  INSERT INTO person (person_id, fname, lname, gender, birdh_date)
  VALUES (null, 'Whilliam', 'Turner', 'M', '1972-05-27');



/* Выбор значений из таблицы person где person_id = 1*/

  SELECT person_id, fname, lname, birdh_date
  FROM person
  WHERE person_id = 1;



/* Добавление любимых блюд Вильяма Тёрнера */

  INSERT INTO favorite_food (person_id, food)
  VALUES (1, 'pizza');

  INSERT INTO favorite_food (person_id, food)
  VALUES (1, 'cookies');

  INSERT INTO favorite_food (person_id, food)
  VALUES (1, 'nachos');



/* Выбор любимых блюд Вильяма Тёрнера */

  SELECT food
  FROM favorite_food
  WHERE person_id = 1
  ORDER BY food;




/*  Добавление Сьюзен Смит */

  INSERT INTO person (person_id, fname, lname, gender, birdh_date, address, city, state, country, postal_code)
  VALUES (null, 'Susan', 'Smith', 'F', '1975-11-02', '23 Maple St.', 'Arlington', 'VA', 'USA', '20220');




/* Обновление данных для Вильяма Тёрнера */

  UPDATE person
  SET
    address = '1225 Tremont St.',
    city = 'Boston',
    state = 'MA',
    country = 'USA',
    postal_code = '02138'
    WHERE person_id = 1;




/* Удаление Сьюзен */

  DELETE FROM person
  WHERE person_id = 2;



/* Удаление тестовых таблиц person и favorite_food */

  DROP TABLE favorite_food;
  DROP TABLE person;



/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************                                                     *******************/
/*********************                                                     *******************/
/*********************                   АЗБУКА ЗАПРОСОВ                   *******************/
/*********************                                                     *******************/
/*********************                                                     *******************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/


/*
  Банковская система, которая приводится в примерах книги
|-------------------------------------------------------------------------------------------------
| Таблица           | Описание
|-------------------------------------------------------------------------------------------------
| Account           | Конкретный счет, открытый для конкретного клиента
| Business          | Клиент - юридическое лицо (подтип таблицы Customer)
| Customer          | Физическое или юридическое лицо, известные банку
| Department        | Группа сотрудников банка, реализующая определенную банковскую функцию
| Employee          | Человек, работающий в банке
| Individual        | Клиент - физическое лицо (подтип таблицы Customer)
| Officer           | Человек, которому разрешено вести дела от лица клиента юридического лица
| Product           | Услуга банка, предлагаемая клиентам
| Product_type      | Группа функционально схожих услуг
| Transaction       | Изменение баланса счета
|-------------------------------------------------------------------------------------------------
*/

/*
* Блоки запроса
*
* SELECT      - Определяет столбцы, которые должны быть включены в результирующий набор запроса
* FROM        - Указывает таблицы, из которых должны быть извлечены данные, и то, как эти таблицы должны быть соединены
* WHERE       - Ограничивает число строк в окончательном результирующем наборе
* GROUP BY    - Используется для группировки строк по одинаковым значениям столбцов
* HAVING      - Ограничивает число строк в окончательном результирующем наборе с помощью группировки данных
* ORDER BY    - Сортирует строки окончательного результирующего набора по одному или более столбцам
*/



/* Выражение выборки с демонстрацией использования литерала, выражения и вызова встроенной функции */

  SELECT emp_id, 'ACTIVE', emp_id * 3.14159, UPPER(lname);
  FROM employee;



/* Если требуется только выполнить встроенную функцию или вычислить простое выражение, можно вообще обойтись без блока from */

  SELECT VERSION(), USER(), DATABASE();



/* Псевдонимы столбцов ( указываются через пробел после полей ) */

  SELECT emp_id,
    'ACTIVE' status,
    emp_id * 3.14159 empid_x_pi,
    UPPER(lname) last_name_upper
  FROM employee;



/* Выборка данных без дубликатов */

  SELECT DISTINCT cust_id
  FROM account;



/* Выборка из таблицы формируемые подзапросом */

  SELECT e.emp_id, e.fname, e.lname
  FROM (SELECT emp_id, fname, lname, start_date, title
        FROM employee
        ) e;



/* Выборка из представления (view) */

  CREATE VIEW employee_vw AS
  SELECT emp_id, fname, lname,
  YEAR(start_date) start_year
  FROM employee;

  SELECT emp_id, start_year
  FROM employee_vw;



/* Выборка из несколькиз таблиц */

  SELECT employee.emp_id, employee.fname, employee.lname, department.name dept_name
  FROM employee INNER JOIN department ON employee.dept_id = department.dept_id;














/**************************************************************************************/
/**************************                           *********************************/
/**************************  Завершил на странице 63  *********************************/
/**************************                           *********************************/
/**************************************************************************************/


































